// Code generated by MockGen. DO NOT EDIT.
// Source: member-strategy.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockmember is a mock of member interface.
type Mockmember struct {
	ctrl     *gomock.Controller
	recorder *MockmemberMockRecorder
}

// MockmemberMockRecorder is the mock recorder for Mockmember.
type MockmemberMockRecorder struct {
	mock *Mockmember
}

// NewMockmember creates a new mock instance.
func NewMockmember(ctrl *gomock.Controller) *Mockmember {
	mock := &Mockmember{ctrl: ctrl}
	mock.recorder = &MockmemberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockmember) EXPECT() *MockmemberMockRecorder {
	return m.recorder
}

// IsMember mocks base method.
func (m *Mockmember) IsMember(projectID, userID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsMember", projectID, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// IsMember indicates an expected call of IsMember.
func (mr *MockmemberMockRecorder) IsMember(projectID, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsMember", reflect.TypeOf((*Mockmember)(nil).IsMember), projectID, userID)
}
