// Code generated by MockGen. DO NOT EDIT.
// Source: admin-strategy.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockadmin is a mock of admin interface.
type Mockadmin struct {
	ctrl     *gomock.Controller
	recorder *MockadminMockRecorder
}

// MockadminMockRecorder is the mock recorder for Mockadmin.
type MockadminMockRecorder struct {
	mock *Mockadmin
}

// NewMockadmin creates a new mock instance.
func NewMockadmin(ctrl *gomock.Controller) *Mockadmin {
	mock := &Mockadmin{ctrl: ctrl}
	mock.recorder = &MockadminMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockadmin) EXPECT() *MockadminMockRecorder {
	return m.recorder
}

// IsAdmin mocks base method.
func (m *Mockadmin) IsAdmin(projectID, userID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsAdmin", projectID, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// IsAdmin indicates an expected call of IsAdmin.
func (mr *MockadminMockRecorder) IsAdmin(projectID, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsAdmin", reflect.TypeOf((*Mockadmin)(nil).IsAdmin), projectID, userID)
}
